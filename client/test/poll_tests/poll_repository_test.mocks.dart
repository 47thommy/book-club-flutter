// Mocks generated by Mockito 5.4.0 from annotations
// in client/test/poll_tests/poll_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:client/domain/poll/poll.dart' as _i2;
import 'package:client/domain/poll/poll_form.dart' as _i5;
import 'package:client/infrastructure/poll/data_providers/poll_api.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePoll_0 extends _i1.SmartFake implements _i2.Poll {
  _FakePoll_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PollApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockPollApi extends _i1.Mock implements _i3.PollApi {
  MockPollApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
      ) as String);
  @override
  _i4.Future<_i2.Poll> getPoll(
    int? groupId,
    int? pollId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPoll,
          [
            groupId,
            pollId,
            token,
          ],
        ),
        returnValue: _i4.Future<_i2.Poll>.value(_FakePoll_0(
          this,
          Invocation.method(
            #getPoll,
            [
              groupId,
              pollId,
              token,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Poll>);
  @override
  _i4.Future<_i2.Poll> createPoll(
    int? groupId,
    _i5.PollForm? poll,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPoll,
          [
            groupId,
            poll,
            token,
          ],
        ),
        returnValue: _i4.Future<_i2.Poll>.value(_FakePoll_0(
          this,
          Invocation.method(
            #createPoll,
            [
              groupId,
              poll,
              token,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Poll>);
  @override
  _i4.Future<void> deletePoll(
    int? pollId,
    int? groupId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePoll,
          [
            pollId,
            groupId,
            token,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
